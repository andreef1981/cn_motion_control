// value to be used for grating absolute power on assigned in prog19
//Sys.Idata[2]=0.0;

// Cs global variables

#define DesiredPosition Q0

// Wheel specific to keep track of position
csglobal PosCounter;
csglobal Checker;
csglobal actualPos;
csglobal PlusInCounter;
csglobal PlusOutCounter;
csglobal MinusInCounter;
csglobal MinusOutCounter;

// pointer to card user flags
ptr Motor6UserFlag->Gate3[1].Chan[3].UserFlag;
ptr Motor7UserFlag->Gate3[2].Chan[0].UserFlag;
ptr Motor9UserFlag->Gate3[2].Chan[2].UserFlag;
ptr Motor10UserFlag->Gate3[2].Chan[3].UserFlag;
ptr Motor11UserFlag->Gate3[3].Chan[0].UserFlag;
ptr Motor16UserFlag->Gate3[4].Chan[1].UserFlag;
ptr Motor17UserFlag->Gate3[4].Chan[2].UserFlag;

// pointer to card plus limit flags
ptr Motor3PlusFlag->Gate3[1].Chan[0].PlusLimit;
ptr Motor4PlusFlag->Gate3[1].Chan[1].PlusLimit;
ptr Motor5PlusFlag->Gate3[1].Chan[2].PlusLimit;
ptr Motor6PlusFlag->Gate3[1].Chan[3].PlusLimit;
ptr Motor8PlusFlag->Gate3[2].Chan[1].PlusLimit;
ptr Motor9PlusFlag->Gate3[2].Chan[2].PlusLimit;
ptr Motor15PlusFlag->Gate3[4].Chan[0].PlusLimit;

// pointer to card plus limit flags
ptr Motor3MinusFlag->Gate3[1].Chan[0].MinusLimit;
ptr Motor4MinusFlag->Gate3[1].Chan[1].MinusLimit;
ptr Motor5MinusFlag->Gate3[1].Chan[2].MinusLimit;
ptr Motor6MinusFlag->Gate3[1].Chan[3].MinusLimit;
ptr Motor8MinusFlag->Gate3[2].Chan[1].MinusLimit;
ptr Motor9MinusFlag->Gate3[2].Chan[2].MinusLimit;
ptr Motor15MinusFlag->Gate3[4].Chan[3].MinusLimit;

// pointers to IO card
PTR Input1->ACC65E[6].DataReg[0].0.1;
PTR Input2->ACC65E[6].DataReg[0].1.1;
PTR Input3->ACC65E[6].DataReg[0].2.1;
PTR Input4->ACC65E[6].DataReg[0].3.1;
PTR Input5->ACC65E[6].DataReg[0].4.1;
PTR Input6->ACC65E[6].DataReg[0].5.1;
PTR Input7->ACC65E[6].DataReg[0].6.1;
PTR Input8->ACC65E[6].DataReg[0].7.1;
PTR Input9->ACC65E[6].DataReg[1].0.1;
PTR Input10->ACC65E[6].DataReg[1].1.1;
PTR Input11->ACC65E[6].DataReg[1].2.1;
PTR Input12->ACC65E[6].DataReg[1].3.1;
PTR Input13->ACC65E[6].DataReg[1].4.1;
PTR Input14->ACC65E[6].DataReg[1].5.1;
PTR Input15->ACC65E[6].DataReg[1].6.1;
PTR Input16->ACC65E[6].DataReg[1].7.1;
PTR Input17->ACC65E[6].DataReg[2].0.1;
PTR Input18->ACC65E[6].DataReg[2].1.1;
PTR Input19->ACC65E[6].DataReg[2].2.1;
PTR Input20->ACC65E[6].DataReg[2].3.1;
PTR Input21->ACC65E[6].DataReg[2].4.1;
PTR Input22->ACC65E[6].DataReg[2].5.1;
PTR Input23->ACC65E[6].DataReg[2].6.1;
PTR Input24->ACC65E[6].DataReg[2].7.1;