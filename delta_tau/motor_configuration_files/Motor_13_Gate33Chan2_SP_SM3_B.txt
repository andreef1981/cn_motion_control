///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// MOTOR xxx xxx stage
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//Channel PFM Hardware Settings

Gate3[3].Chan[2].PfmWidth=15				//May be stepper drive specific
							// units of pfm cycles
Gate3[3].Chan[2].OutputMode=8				// PFM on channel D
Gate3[3].Chan[2].PackOutData=0
Gate3[3].Chan[2].OutputPol=0    			//May be stepper drive specific
Gate3[3].Chan[2].PfmDirPol=0    			//May be stepper drive specific
Gate3[3].Chan[2].TimerMode=3				// internal puls and direction drive channels timer circuit as counter
							// leaves encoder counter available for external signal 
							// default 0 hardware 1/T

Gate3[3].Chan[2].EncCtrl=8				//default 7, how to decode input signal, 8 internal puls and direction CW

//Gate3[3].Chan[2].TimerMode=0				// mu's are set by quadrature encoder
//Gate3[3].Chan[2].EncCtrl = 7				// Quadrature direction same as jog direction

							// not part of delta tau basic setup
//Gate3[3].Chan[2].Pfm=0				// not part of delta tau basic setup
							//[-2,147,483,392..2,147,483,391], default 0
							//command value for pfm accumulator
							// f_out = gate.chan.pfm * f_pfmclk / 4,294,483,648
Gate3[3].Chan[2].CaptCtrl=2				// how flags are detected 2 flat high 10 flag low

//Encoder Conversion Table

EncTable[13].Type = 1
EncTable[13].pEnc =  Gate3[3].Chan[2].TimerA.a		// delta tau basic setup
//EncTable[13].pEnc = Acc24E3[0].Chan[2].ServoCapt.a;
EncTable[13].index1 =  0
EncTable[13].index2 = 0
//EncTable[13].index3 =  0
//EncTable[13].MaxDelta =  0
EncTable[13].ScaleFactor = 1/256 

//Motor Control

Motor[13].PhaseCtrl=0					// default 0 [0..15], commutation calculation
Motor[13].ServoCtrl=1					// default 0 [0..15], 1=standard mode
Motor[13].pDac=Gate3[3].Chan[2].Pfm.a
Motor[13].pAmpFault=0                  			//May be stepper drive specific
//Motor[13].pAmpEnable=1                  		//May be stepper drive specific
Motor[13].pAmpEnable=Gate3[3].Chan[2].OutCtrl.a

Motor[13].pLimits=0
//Motor[13].pLimits = Gate3[3].Chan[2].Status.a
Motor[13].pCaptFlag = Gate3[3].Chan[2].Status.a
//Motor[13].pCaptFlag = Gate3[3].Chan[2].HomeCapt.a
Motor[13].pCaptPos = Gate3[3].Chan[2].HomeCapt.a
// Motor[13].CaptFlagBit=21				//page 419 user manual

Motor[13].pEnc = EncTable[13].a
//Motor[13].pEnc2 = EncTable[13].a
                                       
//Motor Gains

Motor[13].Servo.Kp = 4
Motor[13].Servo.Ki = 0
Motor[13].Servo.BreakPosErr = 2.0
Motor[13].Servo.Kbreak = 0 
//Motor[13].JogSpeed=10.
Motor[13].JogSpeed=0.1
Motor[13].homevel=0.1

Motor[13].JogTa=1000
Motor[13].JogTs=1000

//Motor[13].BlSize=90
//Motor[13].BlSize=100
//Motor[13].BlSlewRate =20

//Motor[13].HomeOffset=20
//Motor[13].HomeOffset=30
//Gate3[3].Chan[2].Pfm=10000.

&13							// Address C.S. 1

#13->22.22AX
//Coord[13].PosRollOver[1]=18000
//Coord[1].PosRollOver[2]=200
Coord[13].PosRollOver[0]=360

//&1

 
